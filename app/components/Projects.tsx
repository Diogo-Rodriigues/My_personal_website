"use client"

import { useState } from "react"
import { motion, AnimatePresence } from "framer-motion"
import Image from "next/image"
import Link from "next/link"

const projectCategories = [
  {
    name: "Web Development",
    projects: [
      {
        title: "Eletronics store  | React - Python - SQLite",
        description: "This is a full-stack e-commerce application built using React for the frontend and Django for the backend.",
        image: "/Images/Eletronic_Store.png?height=300&width=400",
        slug: "e-commerce-platform",
      },
      {
        title: "StockSphere | React - C# - PostgreSQL",
        description: "Modern web application that provides users with comprehensive financial information, stock market data, comments on shares, and portfolio management capabilities.",
        image: "/Images/StockSphere.png?height=300&width=400",
        slug: "financial-social-media",
      },
    ],
  },
  {
    name: "Cybersecurity",
    projects: [
      {
        title: "CTF Write-ups",
        description: "Here are write-ups of some CTFs (Capture the flag) I have conducted where I learned about web vulnerabilities, cryptography and general cybersecurity skills.",
        image: "/Images/CTF.png?height=300&width=400",
        slug: "CTF",
      },
      {
        title: "Network traffic analysis with TCPDump",
        description: "I simulated that someone is trying to open SSH sessions into my workstation and decided to set up a surveillance script to catch any TCP traffic coming through as SSH and to catch any TCP traffic coming from a specific IP addresse.",
        image: "/Images/TCPDump.png?height=300&width=400",
        slug: "network-scanning",
      },
    ],
  },
  {
    name: "High Performance Computing (Cuda)",
    projects: [
      {
        title: "Optimization of a fluid dynamics simulation in 3D | C++ - CUDA",
        description: "This project was divided into 3 types of optimizations (sequential optimizations, multithreading optimizations with OpenMP and GPU implementation), where we achieved a runtime improvement of 122 times faster than the original version.",
        image: "/Images/HPC.png?height=300&width=400",
        slug: "gpu-programming",
      },
    ],
  },
  {
    name: "Eletronics",
    projects: [
      {
        title: "Manchester Based Master-Slave Bus Interface",
        description: "This project implements a Master-Slave communication system using Manchester encoding for data transmission. The system ensures synchronized communication, correct addressing of sensors, and error detection mechanisms to maintain data integrity.",
        image: "/Images/Bus-Interface.png?height=300&width=400",
        slug: "Master-Slave-Interface",
      },
      {
        title: "Instrumentation Amplifier for measuring biopotentials generated by human body",
        description: "This practical work aims to study the acquisition and amplification of differential signals using an instrumentation amplifier. The focus is on measuring biopotentials generated by the human body, such as EMG (electromyogram), EOG (electro-oculogram), EEG (electroencephalogram) and ECG (electrocardiogram).",
        image: "/Images/Instrumentation-Amplifier.png?height=300&width=400",
        slug: "Instrumentation-Amplifier",
      },
    ],
  },
]

const ProjectCategory = ({ category, isSelected, onHover }) => (
  <motion.div
    className={`cursor-pointer p-4 rounded-lg transition-colors duration-300 ${
      isSelected ? "border-2 border-purple-500" : "border-2 border-transparent hover:border-purple-500"
    }`}
    onHoverStart={onHover}
    whileHover={{ scale: 1.05 }}
    whileTap={{ scale: 0.95 }}
  >
    <h3 className="text-lg font-semibold text-center">{category.name}</h3>
  </motion.div>
)

const ProjectCard = ({ project }) => (
  <motion.div
    initial={{ opacity: 0, scale: 0.8 }}
    animate={{ opacity: 1, scale: 1 }}
    exit={{ opacity: 0, scale: 0.8 }}
    whileHover={{ scale: 1.05 }}
    className="rounded-lg overflow-hidden shadow-lg"
  >
    <Image
      src={project.image || "/placeholder.svg"}
      alt={project.title}
      width={400}
      height={300}
      className="w-full h-48 object-cover"
    />
    <div className="p-4">
      <h4 className="text-xl font-semibold mb-2">{project.title}</h4>
      <p className="text-gray-400 mb-4">{project.description}</p>
      <Link href={`/projects/${project.slug}`} passHref>
        <motion.button
          whileHover={{ scale: 1.05 }}
          whileTap={{ scale: 0.95 }}
          className="bg-purple-500 hover:bg-purple-600 text-white font-bold py-2 px-4 rounded-full transition-colors duration-300"
        >
          View Details
        </motion.button>
      </Link>
    </div>
  </motion.div>
)

const Projects = () => {
  const [selectedCategory, setSelectedCategory] = useState(projectCategories[0])

  return (
    <section id="projects" className="py-20">
      <div className="container mx-auto px-4">
        <h2 className="text-4xl font-bold mb-12 text-center bg-clip-text text-transparent bg-gradient-to-r from-purple-400 to-pink-400">
          Some of my projects
        </h2>
        <div className="grid grid-cols-1 sm:grid-cols-3 gap-4 mb-12">
          {projectCategories.map((category) => (
            <ProjectCategory
              key={category.name}
              category={category}
              isSelected={selectedCategory.name === category.name}
              onHover={() => setSelectedCategory(category)}
            />
          ))}
        </div>
        <AnimatePresence mode="wait">
          <motion.div
            key={selectedCategory.name}
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: -20 }}
            transition={{ duration: 0.5 }}
            className="grid grid-cols-1 md:grid-cols-2 gap-8 mb-12"
          >
            {selectedCategory.projects.map((project) => (
              <ProjectCard key={project.title} project={project} />
            ))}
          </motion.div>
        </AnimatePresence>
        <div className="text-center">
          <Link href="/projects" passHref>
            <motion.button
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              className="bg-purple-500 hover:bg-purple-600 text-white font-bold py-3 px-8 rounded-full transition-colors duration-300 text-lg"
            >
              View All Projects
            </motion.button>
          </Link>
        </div>
      </div>
    </section>
  )
}

export default Projects

