"use client"

import Link from "next/link"
import Image from "next/image"
import { motion } from "framer-motion"
import { ArrowLeft } from "lucide-react"

const projects = [
  {
    title: "Eletronics store  | React - Python - SQLite",
    description: "This is a full-stack e-commerce application built using React for the frontend and Django for the backend.",
    image: "/Images/Eletronic_Store.png?height=300&width=400",
    slug: "e-commerce-platform",
    category: "Web Development",
  },
  {
    title: "My website  | React",
    description: "This is my personal website",
    image: "/Images/My_Website.png?height=300&width=400",
    slug: "personal-website",
    category: "Web Development",
  },
  {
    title: "StockSphere | React - C# - PostgreSQL",
    description: "Modern web application that provides users with comprehensive financial information, stock market data, comments on shares, and portfolio management capabilities.",
    image: "/Images/StockSphere.png?height=300&width=400",
    slug: "financial-social-media",
    category: "Web Development"
  },
  {
    title: "Library Management System | C++",
    description: "This is a comprehensive C++ application designed for managing a library's collection of books and members",
    image: "/Images/Library_manager.png?height=300&width=400",
    slug: "library-management",
    category: "Software Development",
  },
  {
    title: "How I learned SQL queries | SQL",
    description: "This was the project I did when I first learned SQL, despite being a simple project it was very useful for me to learn at the beginning.",
    image: "/Images/SQL_queries.png?height=300&width=400",
    slug: "SQL-queries",
    category: "Databases",
  },
  {
    title: "Optimization of a fluid dynamics simulation in 3D | C++ - CUDA",
    description: "This project was divided into 3 types of optimizations (sequential optimizations, multithreading optimizations with OpenMP and GPU implementation), where we achieved a runtime improvement of 122 times faster than the original version.",
    image: "/Images/HPC.png?height=300&width=400",
    slug: "gpu-programming",
    category: "High Performance Computing (Cuda)",
  },
  {
    title: "CTF Write-ups",
    description: "Here are write-ups of some CTFs (Capture the flag) I have conducted where I learned about web vulnerabilities, cryptography and general cybersecurity skills.",
    image: "/Images/CTF.png?height=300&width=400",
    slug: "CTF",
    category: "Cybersecurity",
  },
  {
    title: "Network traffic analysis with TCPDump",
    description: "I simulated that someone is trying to open SSH sessions into my workstation and decided to set up a surveillance script to catch any TCP traffic coming through as SSH and to catch any TCP traffic coming from a specific IP addresse.",
    image: "/Images/TCPDump.png?height=300&width=400",
    slug: "network-scanning",
    category: "Cybersecurity",
  },
  {
    title: "TCP/IP traffic with Wireshark",
    description: "In this project I want to detect certain TCP/IP network traffic on my server, specifically web traffic and train some network skills!",
    image: "/Images/Wireshark.png?height=300&width=400",
    slug: "network-scanning-wireshark",
    category: "Cybersecurity",
  },
  {
    title: "Manchester Based Master-Slave Bus Interface",
    description: "This project implements a Master-Slave communication system using Manchester encoding for data transmission. The system ensures synchronized communication, correct addressing of sensors, and error detection mechanisms to maintain data integrity.",
    image: "/Images/Bus-Interface.png?height=300&width=400",
    slug: "Master-Slave-Interface",
    category: "Eletronics",
  },
  {
    title: "Instrumentation Amplifier for measuring biopotentials generated by human body",
    description: "This practical work aims to study the acquisition and amplification of differential signals using an instrumentation amplifier. The focus is on measuring biopotentials generated by the human body, such as EMG (electromyogram), EOG (electro-oculogram), EEG (electroencephalogram) and ECG (electrocardiogram).",
    image: "/Images/Instrumentation-Amplifier.png?height=300&width=400",
    slug: "Instrumentation-Amplifier",
    category: "Eletronics",
  },
  {
    title: "The RLC circuit as a frequency filter series and parallel",
    description: "This work aimed to analyze the behavior of RLC circuits, in resonance, both in series and in parallel.",
    image: "/Images/RLC.png?height=300&width=400",
    slug: "RLC-circuit",
    category: "Eletronics",
  },
]

const ProjectCard = ({ project }) => (
  <motion.div
    initial={{ opacity: 0, scale: 0.8 }}
    animate={{ opacity: 1, scale: 1 }}
    whileHover={{ scale: 1.05 }}
    className="bg-gray-800 rounded-lg overflow-hidden shadow-lg"
  >
    <Image
      src={project.image || "/placeholder.svg"}
      alt={project.title}
      width={400}
      height={300}
      className="w-full h-48 object-cover"
    />
    <div className="p-4">
      <h3 className="text-xl font-semibold mb-2">{project.title}</h3>
      <p className="text-gray-400 mb-2">{project.description}</p>
      <p className="text-purple-400 mb-4">Category: {project.category}</p>
      <Link href={`/projects/${project.slug}`} passHref>
        <motion.button
          whileHover={{ scale: 1.05 }}
          whileTap={{ scale: 0.95 }}
          className="bg-purple-500 hover:bg-purple-600 text-white font-bold py-2 px-4 rounded-full transition-colors duration-300"
        >
          View Details
        </motion.button>
      </Link>
    </div>
  </motion.div>
)

export default function ProjectsPage() {
  return (
    <div className="min-h-screen bg-gray-900 py-12 px-4 sm:px-6 lg:px-8">
      <div className="max-w-7xl mx-auto">
        <Link href="/#projects" className="inline-flex items-center text-purple-400 hover:text-purple-300 mb-8">
          <ArrowLeft className="mr-2" />
          Back to Home
        </Link>
        <h1 className="text-4xl font-bold mb-12 text-center bg-clip-text text-transparent bg-gradient-to-r from-purple-400 to-pink-400">
          All Projects
        </h1>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {projects.map((project) => (
            <ProjectCard key={project.slug} project={project} />
          ))}
        </div>
      </div>
    </div>
  )
}

